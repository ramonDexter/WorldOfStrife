[en default]
// This file contians templates used by the default base describer
// Note that all descriptive strings begein with 2 codes for object's grammatic gender and number
// gender can be one of MFNOX for masculine/feminine/neutral/object/indeterminate
// number can be one of SDPX for singular/dual/plural/indeterminate

// Use this for the description sentence. The %o will be replaced with the object.
DESC_TEXT_YOUSEE="XX\c-You see \cn%o\c-.";
DESC_TEXT_NAMED_XX="\cn%o\c- named \ct%n\c-";

// Use this to describe no object
DESC_NULL="OSnothing";
// Use this to describe the sky
DESC_SKY="OSthe sky";

// Use this for textures missing descriptions
DESC_MISS_TEX="XXa %l called \ct%t\c-";
// Use this for actors missing descriptions
DESC_MISS_ACT="OSsomething called \ct%t\c-";

// Location descriptions for textures
// The %l in a texture description will be replaced with one of these
DESC_LOC_TEX="OSsurface";
DESC_LOC_CEI="OSceiling";
DESC_LOC_CTR="OStrue ceiling";//debug
DESC_LOC_C3D="OSfalse ceiling";//debug
DESC_LOC_CTR="OSceiling";//override
DESC_LOC_C3D="OSceiling";//override
DESC_LOC_FLO="OSfloor";
DESC_LOC_FTR="OStrue floor";//debug
DESC_LOC_F3D="OSfalse floor";//debug
DESC_LOC_FTR="OSfloor";//override
DESC_LOC_F3D="OSfloor";//override
DESC_LOC_WAL="OSwall";
DESC_LOC_WTR="OStrue wall";//debug
DESC_LOC_W3D="OSfalse wall";//debug
DESC_LOC_WTR="OSwall";//override
DESC_LOC_W3D="OSwall";//override
// I override the 3d/true text because in most situations they don't matter and user doesn't need to know

// Templates for textures
// DESC_TEX_(texture)= use this for any textures
// DESC_CEI_(texture)= use this for textures on any ceilings
// DESC_CTR_(texture)= use this for textures on true ceilings
// DESC_C3D_(texture)= use this for textures on 3d ceilings
// DESC_FLO_(texture)= use this for textures on any floors
// DESC_FTR_(texture)= use this for textures on true floors
// DESC_F3D_(texture)= use this for textures on 3d floors
// DESC_WAL_(texture)= use this for textures on any walls
// DESC_WTR_(texture)= use this for textures on true walls
// DESC_W3D_(texture)= use this for textures on 3d walls
//
// The fall-through for missing definitions are these
// CTR -> CEI -> TEX -> MISS_TEX
// C3D -> CEI -> TEX -> MISS_TEX
// FTR -> FLO -> TEX -> MISS_TEX
// F3D -> FLO -> TEX -> MISS_TEX
// WTR -> WAL -> TEX -> MISS_TEX
// W3D -> WAL -> TEX -> MISS_TEX
//
// The easiest way to add a definition for a texture is with the generic TEX
// lookup. This serves as a catch-all. Example:
// 	DESC_TEX_GSTONE1="OSa green stone surface";
// To make separte definitions depending on where the texture was found, use the
// specific location lookups. Example:
// 	DESC_CEI_GSTONE1="OSa green stone ceiling";
// 	DESC_FLO_GSTONE1="OSa green stone floor";
// 	DESC_WAL_GSTONE1="OSa green stone wall";
// 	... etc ...
// Or the easier way, define a generic as a catch-all and use the location code.
// Example:
// 	DESC_TEX_GSTONE1="XXa green stone %l";
// That %l code will be replaced with one of DESC_LOC_* depending on the texture
// location. Note that when using the %l code, any grammatical indiscriminates
// in the description will be replaced by those in the lookup location.
// Another way to do it is to add the TEX definition as a catch-all and then add
// location-specific descriptions where desired. Example:
// 	DESC_TEX_CONS1_1="OSa computer terminal";
// 	DESC_CEI_CONS1_1="OSan overhead terminal";


// GZDOOM texture "-noflat-"
// This is the no-texture provided in gzdoom.pk3. Note that illegal key characters
// such as space and dash will be replaced by underscore for this lookup, and thus
// "-noflat-" becomes "_NOFLAT_" for purposes of this lookup.
DESC_TEX__NOFLAT_="XXa %l with a missing texture";
// Note that the above string may produce incorrect grammer. There is no way to 
// know if "a" is the proper article for that object. For English this is not a
// problem, as the words wall, ceiling, floor, etc all work properly with this
// article. Other language translations may need to be aware of this.

// Templates for Actors
//	DESC_ACT_(tag) use this for any actor
// Illegal key characters such as space and dash will be replaced by underscore
// during the lookup, so for example an actor with tag "Super Shotgun" will have
// a lookup key of "DESC_ACT_SUPER_SHOTGUN", and "Arch-Vile" will be looked up as
// "DESC_ACT_ARCH_VILE"

// Templates for Inventory actors
// DESC_INV_(tag)= use this for inventory items
// The quantity code '%q' is replaced with Inventory.Amount, so for example:
// 	DESC_INV_STIMPACK="OSa stimpack that heals %q health";
// Inventory descriptions can contain up to 2 ampersand '&' symbols. The text
// will be split into 3 tokens, and a token will be choosen based on the amount
// of the inventory item. Token #1 represents an amount of 1, token #2 represents
// an amount of 2, and token #3 represents anything else. Example:
//	DESC_INV_BULLETS="OSa bullet&ODa couple of bullets&OPsome bullets";
// If there are only 2 tokens (ie only 1 ampersand) then token 2 will be used for
// amount of 2 or any other number besides 1. Example:
//	DESC_INV_ENERGY_CELLS="OSan energy cell&OPsome energy cells";
// The '%q' code is still usable in this form. Example:
// 	DESC_INV_ROCKETS="OSa rocket&ODa couple of rockets&OP%q rockets";
