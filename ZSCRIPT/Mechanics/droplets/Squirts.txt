class BloodSquirt : Droplets replaces Blood
{
	Default
	{
		+NOBLOCKMAP
		+DONTTHRUST
		+THRUACTORS
		+NOTELEPORT
		+ALLOWPARTICLES
		+PUFFGETSOWNER
		+NOGRAVITY
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (target)
			{
				angle = AngleTo(target) + frandom(-11.25,11.25);
				SetOrigin((pos.xy + (target.pos.xy - pos.xy).unit(), pos.z), false);
			}
			else
				angle = frandom(0,360);
			A_SpawnItemEx("BloodHitPuff",flags: SXF_TRANSFERTRANSLATION);
			if (blood_chunky)
			{
				Vector3 v = (AngleToVector(frandom(0,360),frandom(1,4)),frandom(0,4));
				A_SpawnItemEx("RandGiblet",xvel: v.x,yvel: v.y,zvel: v.z,flags: SXF_TRANSFERTRANSLATION);
			}
			if (blood_mist) {A_SpawnItemEx("BloodMist",flags: SXF_TRANSFERTRANSLATION);}
		}
		stop;
		TNT1 A 0
		{
			if (target)
			{
				angle = AngleTo(target) + frandom(-22.5,22.5);
				SetOrigin((pos.xy + (target.pos.xy - pos.xy).unit(), pos.z), false);
			}
			else
				angle = frandom(0,360);
			A_SpawnItemEx("BloodHitPuffMid",flags: SXF_TRANSFERTRANSLATION);
		}
		stop;
		TNT1 A 0
		{
			if (target)
			{
				angle = AngleTo(target) + frandom(-45,45);
				SetOrigin((pos.xy + (target.pos.xy - pos.xy).unit(), pos.z), false);
			}
			else
				angle = frandom(0,360);
			A_SpawnItemEx("BloodHitPuffSmall",flags: SXF_TRANSFERTRANSLATION);
		}
		stop;
	}
}

class BloodHitPuff : Droplets
{
	double user_scale, user_force, user_angmom;
	
	action void A_SpawnDroplet(double drop_size)
	{
		double angle = invoker.angle + frandom(-5.0,5.0);
		double force = invoker.user_force * frandom(0.833333,1.166667);
		drop_size *= frandom(0.833333,1.166667);
		let droplet = BloodDroplet(Actor.Spawn('BloodDroplet',invoker.pos));
		droplet.final_scale = drop_size;
		droplet.scale = (drop_size, drop_size) * 0.333333;
		droplet.Vel3DFromAngle(force, angle, invoker.pitch);
		droplet.translation = invoker.translation;
	}
	
	Default
	{
		+NOBLOCKMAP
		+DONTTHRUST
		+THRUACTORS
		+NOTELEPORT
		+FORCEXYBILLBOARD
		+NOGRAVITY
		Height 1;
		Radius 1;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			user_scale = 0.401878;
			user_force = frandom(12.0,18.0);
			user_angmom = frandom(3.75, 15.0);
			pitch = frandom(-67.5,67.5);
			//A_PlaySound("blood/hit",0,0.3);
			scale.x = frandom(0.4,0.6);
			scale.y = 1.0 - scale.x;
			scale.x *= randompick(1,-1);
			A_FloorSplat(0.75);
		}
		BLPF ABCDE 2
		{
			switch(GetCVar("blood_amt"))
			{
			case 0:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
				break;
			case 1:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.75);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
				break;
			case 2:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.833333);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.666667);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
			}
			angle += frandom(-user_angmom * 0.5, user_angmom);
			user_force *= 0.833333;
			user_scale *= 1.2;
		}
		TNT1 A 0;
		Stop;
	}
}

class BloodHitPuffMid : BloodHitPuff
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			user_scale = 0.401878;
			user_force = frandom(14.0,21.0);
			user_angmom = frandom(-10.0,10.0);
			pitch = frandom(-67.5,67.5);
			//A_PlaySound("blood/hit",0,0.2);
			scale.x = frandom(0.3,0.4);
			scale.y = 0.7 - scale.x;
			scale.x *= randompick(1,-1);
		}
		BLPF ABCDE 2
		{
			switch(GetCVar("blood_amt"))
			{
			case 0:
				A_SpawnDroplet(user_scale);
				break;
			case 1:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
				break;
			case 2:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.75);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
			}
			angle += frandom(-user_angmom * 0.5, user_angmom);
			user_force *= 0.833333;
			user_scale *= 1.2;
		}
		TNT1 A 0;
		Stop;
	}
}

class BloodHitPuffSmall : BloodHitPuff
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			user_scale = 0.401878;
			user_force = frandom(16.0,24.0);
			user_angmom = frandom(-5.0,5.0);
			pitch = frandom(-67.5,67.5);
			//A_PlaySound("blood/hit",0,0.1);
			scale.x = frandom(0.175,0.225);
			scale.y = 0.4 - scale.x;
			scale.x *= randompick(1,-1);
		}
		BLPF ABCDE 2
		{
			switch(GetCVar("blood_amt"))
			{
			case 1:
				A_SpawnDroplet(user_scale);
				break;
			case 2:
				A_SpawnDroplet(user_scale);
				angle += frandom(-user_angmom * 0.5, user_angmom);
				A_SpawnDroplet(user_scale * 0.5);
			}
			angle += frandom(-user_angmom * 0.5, user_angmom);
			user_force *= 0.833333;
			user_scale *= 1.2;
		}
		TNT1 A 0;
		Stop;
	}
}

class BloodSplatPuff : BloodHitPuff replaces BloodSplatter
{}

class AxeBloodPuff : BloodHitPuff replaces AxeBlood
{}